{"version":3,"sources":["Components/Chat/ChatHeader.jsx","Components/Chat/Message.jsx","Chat.js","Components/Sidebar/SidebarChannel.jsx","Sidebar.js","App.js","features/userSlice.js","features/appSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["ChatHeader","className","placeholder","Message","Avatar","Chat","fontSize","type","SidebarChannel","id","channel","Sidebar","InfoOutlined","src","App","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","appSlice","channleId","channleName","setChannelId","app","store","configureStore","reducer","userReducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d0b5e11.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/chat_header.css'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport EditLocationRoundedIcon from '@material-ui/icons/EditLocationRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded';\r\n\r\nfunction ChatHeader() {\r\n    return (\r\n        <div className=\"chatHeader\">\r\n            <div className=\"chatHeader__left\">\r\n                <h3>\r\n                    <span className=\"chatHeader__hash\">#</span>Test Name\r\n                </h3>\r\n            </div>\r\n            <div className=\"chatHeader__right\">\r\n                <NotificationsIcon />\r\n                <EditLocationRoundedIcon />\r\n                <PeopleAltRoundedIcon />\r\n\r\n                <div className=\"chatHeader__search\">\r\n                    <input placeholder=\"Search\"/>\r\n                    <SearchRoundedIcon />\r\n                </div>\r\n\r\n                <SendRoundedIcon />\r\n                <HelpRoundedIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './css/Message.css'\r\nfunction Message() {\r\n    return (\r\n        <div className=\"message\">\r\n            <Avatar />\r\n            <div className=\"message__info\">\r\n                <h4>\r\n                    @the.ome.vyas\r\n                    <span className=\"message__timestamp\">\r\n                        time_stamp\r\n                    </span>\r\n                </h4>\r\n                <p>\r\n                    Message\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport './Chat.css'\r\nimport ChatHeader from './Components/Chat/ChatHeader'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport Message from './Components/Chat/Message';\r\n\r\nfunction Chat() {\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader />\r\n            <div className=\"chat__messages\">\r\n                <Message />\r\n                <Message />\r\n                <Message />\r\n            </div>\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\" />\r\n                <form>\r\n                    <input type=\"text\" placeholder={`message #testChannel`}/>\r\n                    <button className=\"chat__inputButton\" type=\"submit\">\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontSize=\"large\" />\r\n                    <GifIcon fontSize=\"large\" />\r\n                    <EmojiEmotionsIcon fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport './css/sidebar_channel.css'\r\n\r\nfunction SidebarChannel({id, channel}) {\r\n    return (\r\n        <div className=\"sidebarChannel\">\r\n            <h4>\r\n                <span className=\"sidebarChannel__hash\">#</span>ReactRedux\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChannel\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SidebarChannel from './Components/Sidebar/SidebarChannel';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { InfoOutlined } from '@material-ui/icons';\r\nimport { Avatar } from '@material-ui/core';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport HeadsetIcon from '@material-ui/icons/HeadsetMic';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                Ovyas24\r\n                <ExpandMoreIcon />\r\n            </div>\r\n            <div className=\"sidebar__channels\">\r\n                <div className=\"sidebar__channelHeader\">\r\n                    <div className=\"sidebar__header\">\r\n                        <ExpandMoreIcon />\r\n                        <h4>Text Channel</h4>\r\n                    </div>\r\n                    <AddIcon className=\"sidebar__addChannel\" />\r\n                </div>\r\n                <div className=\"sidebar__channelList\">\r\n                    <SidebarChannel />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__voice\">\r\n                <SignalCellularAltIcon\r\n                    className=\"sidebar__voiceIcon\"\r\n                    fontSize=\"large\"\r\n                />\r\n\r\n                <div className=\"sidebar__voiceInfo\">\r\n                    <h3>Voice Connected</h3>\r\n                    <p>Stream</p>\r\n                </div>\r\n\r\n                <div className=\"sidebar__voiceIcons\">\r\n                    <InfoOutlined />\r\n                    <CallIcon />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__profile\">\r\n                <Avatar \r\n                    src=\"https://lh3.googleusercontent.com/6ZAWaS2F3EHWv8pg_5FQzPVP6esDGQ0NkIpuQDacdC1MDyaTK6zI1p3k7P23B5EAlAw-xTXwHGVpKneqwFlXXllKAJhXa2fff5QKUv_Epagz_9Nzuau_tgAHUp82sH_OUmbrcFP7RLvIPko-ogZ0zy5q5lzx_cfcQ-dz3_HL1p1UW2KE-vc7EPktQ8oGWwqemfCIHL0HaWgbCG8Mbw9wVjI5p24r_uJvquQ88CIN5Gj98PntynLFv0Rby3vbSqohnpMjrITk1W0R58eT7OXInG4uRNyiiioHOP-7bRTXVyXa0Z0n-2MLvSY5CGL0j60zV4MP1WhgCGzOHPcnJhL18YXNPgL6qdiEb2p3zcNN1DUv9JWhteSRfgD_kMT7J7r5BVzAl5Qa7kKtYn0V8bMUR1osHshTnqtILcsXEzlMoke5Or9kQP1s58D5axzJbe2-6zTXGfSlUnVUaWsYSU145gz_ugr0Cc3gOXbypTvKzr6kFHDHR4ZOHeG9LwHmZ1x6H1RgGAu7QpM6JpnzLilozwuA2zk5jqcxNDKUqckQPtOJyF3bnF93hJy02xjKzWdd8QOVByvGJ4QNzU66IOSOIEHuIa0tdOueKtvIjsPFDDIUhIPjOgURXMADv3Hbn0A-EdIshOg4vyLhzUChKhzqZvVIjrXm1aE_6bk7xggR6Kqd_GSGOp1rLfumeIJYameG4pLREjMdtGccps3PHYVt4m9J=w680-h906-no?authuser=0\"\r\n                />\r\n                <div className=\"sidebar__profileInfo\">\r\n                    <h3>@the.om.vyas</h3>\r\n                    <p>This is my id</p>\r\n                </div>\r\n\r\n                <div className=\"sidebar__profileIcons\">\r\n                    <MicIcon />\r\n                    <HeadsetIcon />\r\n                    <SettingsIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  return (\n    <div className=\"app\"> \n      <Sidebar />\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState : {\n    user:null\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user += action.payload;\n    },\n    logout: (state, action) =>{\n      state.user = null\n    }\n  }\n});\n\nexport const { login, logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.value;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState : {\r\n    channleId:null,\r\n    channleName:null\r\n  },\r\n  reducers: {\r\n    setChannelId: (state, action) => {\r\n      state.app += action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setChannelId } = appSlice.actions;\r\nexport const selectChannelId = (state) => state.app.channleId;\r\nexport const selectChannelName = (state) => state.app.channleName;\r\nexport default appSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer\n  },\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}